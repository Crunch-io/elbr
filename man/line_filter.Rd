% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr.R
\name{line_filter}
\alias{line_filter}
\title{ELBLog method for setting a line filter}
\usage{
line_filter(.data, pattern)
}
\arguments{
\item{.data}{The \code{ELBLog} object}

\item{pattern}{A string pattern or regular expression to pass to the
shell command \code{egrep}. This enables you to filter down the rows of the log
file to read in much more quickly than reading the whole file into R and then
subsetting the data in memory---if you know a good filtering string to use.
It is best only to use this parameter if you're looking for a relatively
uncommon pattern; if your \code{pattern} matches all lines, it will be slower
than omitting it.}
}
\value{
\code{.data} with \code{pattern} set on it. No I/O happens until you call
\code{\link[=collect]{collect()}} or \code{\link[=summarize]{summarize()}}.
}
\description{
This function lets you use the \code{line_filter} parameter of \code{\link[=read_elb]{read_elb()}} when
querying over many files.
}
\examples{
\dontrun{
ELBLog() \%>\%
    select(elb_status_code, request) \%>\%
    line_filter(" -1 -1 504 ") \%>\%
    collect()
}
}
